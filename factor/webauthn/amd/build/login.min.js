function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}
/**
 * For collecting WebAuthn authenticator details on login
 *
 * @module     factor_webauthn/login
 * @copyright  Catalyst IT
 * @author     Alex Morris <alex.morris@catalyst.net.nz>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("factor_webauthn/login",["factor_webauthn/utils"],(function(utils){return{init:function(initialArgs){var fn,_ref;document.getElementById("id_submitbutton").addEventListener("click",(fn=regeneratorRuntime.mark((function _callee(e){var getArgs,cred,authenticatorAttestationResponse;return regeneratorRuntime.wrap((function(_context){for(;;)switch(_context.prev=_context.next){case 0:if(navigator.credentials&&navigator.credentials.create){_context.next=2;break}throw new Error("Browser not supported.");case 2:if(e.preventDefault(),!1!==(getArgs=JSON.parse(initialArgs)).success){_context.next=6;break}throw new Error(getArgs.msg||"unknown error occured");case 6:return utils.recursiveBase64StrToArrayBuffer(getArgs),_context.next=9,navigator.credentials.get(getArgs);case 9:cred=_context.sent,authenticatorAttestationResponse={id:cred.rawId?utils.arrayBufferToBase64(cred.rawId):null,clientDataJSON:cred.response.clientDataJSON?utils.arrayBufferToBase64(cred.response.clientDataJSON):null,authenticatorData:cred.response.authenticatorData?utils.arrayBufferToBase64(cred.response.authenticatorData):null,signature:cred.response.signature?utils.arrayBufferToBase64(cred.response.signature):null,userHandle:cred.response.userHandle?utils.arrayBufferToBase64(cred.response.userHandle):null},document.getElementById("id_response_input").value=JSON.stringify(authenticatorAttestationResponse),document.getElementById("id_response_input").form.submit();case 13:case"end":return _context.stop()}}),_callee)})),_ref=function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))},function(_x){return _ref.apply(this,arguments)}))}}}));

//# sourceMappingURL=login.min.js.map